services:
  fastapi:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: testovoe_wiki
    ports:
      - "8000:8000"
    command: >
      bash -c "
      aerich migrate && \
      aerich upgrade && \
      uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "
    volumes:
       - .:/app
    working_dir: /app
    depends_on:
      pgdb:
        condition: service_healthy
      redis:
        condition: service_healthy

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 3s
      timeout: 3s

  pgdb:
    image: postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    container_name: pgdb
    volumes:
      - ./pgdata:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  dramatiq_worker:
    build:
      context: .
      dockerfile: Dockerfile

    working_dir: /app
    volumes:
      - .:/app
    command: >
      bash -c "
      dramatiq app.tasks --processes 1 --threads 8
      "
    depends_on:
      redis:
        condition: service_healthy


volumes:
  pgdbdata:
